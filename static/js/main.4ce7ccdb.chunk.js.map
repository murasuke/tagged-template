{"version":3,"sources":["App.tsx","index.tsx"],"names":["seq","pTag","styles","props","clsNm","className","children","Tag1","Tag2","App","style","border","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LACIA,EAAM,EAGJC,EAAO,SAACC,GACZ,OAAO,SAACC,GAEN,IAAMC,EAAK,eAAWJ,KAItB,OACE,qCACE,sCAASI,EAAT,IAAiB,IAAKF,EAAQ,OAC9B,2CAAGG,UAAS,UAAKD,IAAaD,GAA9B,aAAsCA,EAAMG,iBAO9CC,EAAON,EAAK,cAGZO,EAAOP,EAAH,0DAeKQ,MATf,WACE,OACE,sBAAKJ,UAAU,MAAf,UACE,cAACE,EAAD,sEACA,cAACC,EAAD,CAAME,MAAO,CAACC,OAAO,mBAArB,yEC7BNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4ce7ccdb.chunk.js","sourcesContent":["\nlet seq = 0; // classNameを重複させないためのシーケンス番号\n\n// 「<p>タグ＋スタイル設定」コンポーネントを返す「なんちゃってstyled-componsnts」\nconst pTag = (styles: ReadonlyArray<string> | string) => {\n  return (props: any) => {\n    // class名を生成(重複しないようにseqをカウントアップ)\n    const clsNm = `clsNm${seq++}`;\n\n    // <style>タグを<p>をセットで生成する\n    // 重複しないclass名でタグとセレクタを作成する\n    return (\n      <>\n        <style>.{clsNm} {'{'}{styles}{'}'}</style>\n        <p className={`${clsNm}`} {...props}>{props.children}</p>\n      </>    \n    )\n  }\n};\n\n// 「なんちゃってstyled-componsnts」を関数として呼び出して、コンポーネントを取得\nconst Tag1 = pTag('color:red;');\n\n// 「なんちゃってstyled-componsnts」をタグ付きテンプレートとして呼び出す\nconst Tag2 = pTag`\ncolor:blue;\nfont-size:20pt;\n`;\n\n// 生成したコンポーネントを表示する\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Tag1>Tag1 props.childrenに渡す文字列</Tag1>\n      <Tag2 style={{border:'1px solid green'}}>Tag2 props.childrenに渡す文字列</Tag2>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}